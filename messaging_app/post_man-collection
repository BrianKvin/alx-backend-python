{
	"info": {
		"_postman_id": "YOUR_UNIQUE_POSTMAN_COLLECTION_ID",
		"name": "ALX Messaging App API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"description": "Postman Collection for the ALX Messaging App API, including user authentication, conversations, and messages.",
		"owner": "your-github-username"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{ACCESS_TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Example: Set dynamic base URL from environment variable",
					"// pm.environment.set(\"BASE_URL\", \"http://127.0.0.1:8000\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Example: Automatically extract access token after successful login",
					"const responseJson = pm.response.json();",
					"if (pm.request.url.includes('/api/token/') && responseJson.access) {",
					"    pm.environment.set('ACCESS_TOKEN', responseJson.access);",
					"    console.log('Access Token stored:', responseJson.access);",
					"}",
					"// Example: Store conversation ID after creation",
					"if (pm.request.url.includes('/api/conversations/') && pm.request.method === 'POST' && responseJson.id) {",
					"    pm.environment.set('CONVERSATION_ID', responseJson.id);",
					"    console.log('Conversation ID stored:', responseJson.id);",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASE_URL",
			"value": "http://127.0.0.1:8000",
			"type": "string",
			"description": "Base URL for the API. Change if your server is different."
		},
		{
			"key": "ACCESS_TOKEN",
			"value": "",
			"type": "string",
			"description": "JWT Access Token. Automatically set after successful login."
		},
		{
			"key": "REFRESH_TOKEN",
			"value": "",
			"type": "string",
			"description": "JWT Refresh Token. Automatically set after successful login."
		},
		{
			"key": "CONVERSATION_ID",
			"value": "",
			"type": "string",
			"description": "ID of a sample conversation for testing."
		},
		{
			"key": "MESSAGE_ID",
			"value": "",
			"type": "string",
			"description": "ID of a sample message for testing."
		},
		{
			"key": "OTHER_USER_USERNAME",
			"value": "testuser2",
			"type": "string",
			"description": "Username of another user for filtering or adding to conversation."
		},
		{
			"key": "CURRENT_USER_USERNAME",
			"value": "testuser1",
			"type": "string",
			"description": "Username of the current user for login."
		},
		{
			"key": "CURRENT_USER_PASSWORD",
			"value": "password123",
			"type": "string",
			"description": "Password of the current user for login."
		}
	],
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Obtain Tokens (Login)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{CURRENT_USER_USERNAME}}\",\n    \"password\": \"{{CURRENT_USER_PASSWORD}}\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/token/",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"token",
								""
							]
						}
					},
					"response": [
						{
							"name": "Successful Login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"testuser1\",\n    \"password\": \"password123\"\n}"
								},
								"url": {
									"raw": "http://127.0.0.1:8000/api/token/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"api",
										"token",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n    \"access\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n}"
						}
					],
					"description": "Logs in a user and obtains JWT access and refresh tokens. The access token is automatically stored in the `ACCESS_TOKEN` environment variable."
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{REFRESH_TOKEN}}\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/token/refresh/",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"token",
								"refresh",
								""
							]
						}
					},
					"response": [],
					"description": "Refreshes the access token using the refresh token."
				}
			]
		},
		{
			"name": "Conversations",
			"item": [
				{
					"name": "List Conversations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/conversations/",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"conversations",
								""
							]
						}
					},
					"response": [],
					"description": "Retrieves a list of conversations the authenticated user is a participant in."
				},
				{
					"name": "Create Conversation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"participants\": [\n        \"{{CURRENT_USER_USERNAME}}\",\n        \"{{OTHER_USER_USERNAME}}\"\n    ]\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/conversations/",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"conversations",
								""
							]
						}
					},
					"response": [],
					"description": "Creates a new conversation. 'participants' should be an array of usernames."
				},
				{
					"name": "Retrieve Conversation Detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/conversations/{{CONVERSATION_ID}}/",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"conversations",
								"{{CONVERSATION_ID}}",
								""
							]
						}
					},
					"response": [],
					"description": "Retrieves details of a specific conversation, including all messages (due to prefetching in ViewSet for 'retrieve' action)."
				},
				{
					"name": "Update Conversation (PATCH)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"participants\": [\n        \"{{CURRENT_USER_USERNAME}}\",\n        \"{{OTHER_USER_USERNAME}}\",\n        \"another_user_added_later\"\n    ]\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/conversations/{{CONVERSATION_ID}}/",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"conversations",
								"{{CONVERSATION_ID}}",
								""
							]
						}
					},
					"response": [],
					"description": "Updates a conversation. Only participants can update. Example: add/remove participants."
				},
				{
					"name": "Delete Conversation",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/conversations/{{CONVERSATION_ID}}/",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"conversations",
								"{{CONVERSATION_ID}}",
								""
							]
						}
					},
					"response": [],
					"description": "Deletes a specific conversation. Only participants can delete."
				}
			]
		},
		{
			"name": "Messages",
			"item": [
				{
					"name": "List Messages (Paginated & Filtered)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/messages/?page=1&page_size=20&with_user={{OTHER_USER_USERNAME}}&sent_at_after=2024-01-01T00:00:00",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"messages",
								""
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number for pagination."
								},
								{
									"key": "page_size",
									"value": "20",
									"description": "Number of items per page."
								},
								{
									"key": "with_user",
									"value": "{{OTHER_USER_USERNAME}}",
									"description": "Filter messages exchanged with a specific user (username)."
								},
								{
									"key": "sent_at_after",
									"value": "2024-01-01T00:00:00",
									"description": "Filter messages sent after this datetime (ISO 8601 format)."
								},
								{
									"key": "sent_at_before",
									"value": "",
									"description": "Filter messages sent before this datetime (ISO 8601 format). Example: 2024-12-31T23:59:59"
								}
							]
						}
					},
					"response": [],
					"description": "Retrieves a paginated and filterable list of messages from conversations the authenticated user is a participant in."
				},
				{
					"name": "Create Message",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"conversation\": \"{{CONVERSATION_ID}}\",\n    \"content\": \"Hello from Postman!\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/messages/",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"messages",
								""
							]
						}
					},
					"response": [],
					"description": "Sends a new message within a specific conversation. The authenticated user is automatically set as the sender."
				},
				{
					"name": "Retrieve Message Detail",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/messages/{{MESSAGE_ID}}/",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"messages",
								"{{MESSAGE_ID}}",
								""
							]
						}
					},
					"response": [],
					"description": "Retrieves details of a specific message. Only conversation participants can view."
				},
				{
					"name": "Update Message (PATCH)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Updated message content.\"\n}"
						},
						"url": {
							"raw": "{{BASE_URL}}/api/messages/{{MESSAGE_ID}}/",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"messages",
								"{{MESSAGE_ID}}",
								""
							]
						}
					},
					"response": [],
					"description": "Updates a specific message. Only the sender and participants can update. (Consider your model/permissions if only sender can edit)."
				},
				{
					"name": "Delete Message",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/api/messages/{{MESSAGE_ID}}/",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"api",
								"messages",
								"{{MESSAGE_ID}}",
								""
							]
						}
					},
					"response": [],
					"description": "Deletes a specific message. Only the sender and participants can delete. (Consider your model/permissions if only sender can delete)."
				}
			]
		}
	]
}